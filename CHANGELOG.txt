CHANGE LOG
--------------------

2008-3-18 [geoffrey.mcgill]
1.  Added Date.isDate(obj) function which will determine if an object is a Date object. 

	The following example demonstrates a scenario where a simple "typeof" test will not return the expected result.
    
    Example
    
	var doSomething = function (value) {
		var temp = null;
		if (value == "now") {
			temp = new Date();
		}
		return temp;
	};

	var myfunction = function (value) {
		var temp = doSomething(value);
		
		// The value returned by doSomething.
		console.log("doSomething: ", temp);
		
		// Simple typeof check, but "temp" is a typeof "object". But we know it's a Date.
		console.log("type: ", typeof temp);
		
		// The isDate function will correctly determine if "temp" is a Date object or not.
		console.log("isDate: ", Date.isDate(temp));
	}
	
	myfunction("now");

2.  Add .getQuarter() function which will return a Number representing the Year Quarter value for the current Date instance.

	Example
	
	console.log(Date.today().getQuarter()); // 1 to 4

--------------------

2008-3-3 [geoffrey.mcgill]
1.  Fixed .toString() bug where .toString would not return four characters if the year was less than 1000.
        
	// Old 
	console.log(Date.today().set({year: 10}).toString("yyyy"); // "10"
	
	// New
	console.log(Date.today().set({year: 10}).toString("yyyy"); // "0010"
	
	The fix also corrected the same issue with .toString("yy") if the year was less than 10.
	
	// Old 
	console.log(Date.today().set({year: 5}).toString("yy"); // "5"
	
	// New
	console.log(Date.today().set({year: 5}).toString("yy"); // "05"

--------------------

2008-2-26 [geoffrey.mcgill]
1.  Dan Yoder fixed bug with timeContext pattern where if a date included "april" or "august", the parser thought the 'a' was the beginning of a time part (as in am/pm).
       
        "added a quick negative lookahead to the regexp to make sure the 'a' isn't followed by a 'u' or a 'p'."
        
	// Old 
	timeContext: /^\s*(\:|a|p)/i
	
	// New
	timeContext: /^\s*(\:|a(?!u|p)|p)/i
	
2.  Fixed bug in Parser.finish, which was causing "11 Aug 2007 7:15:00 am EDT" to fail.

--------------------

2008-2-21 [geoffrey.mcgill]
1.  Fixed bug in .parseExact where if the month was January ('0') the Parser.finishExact function was resetting to the current month.
2.  Added several new tests to /trunk/test/parseExact/.

--------------------

2008-2-18 [geoffrey.mcgill]
1.  Added .toISOString() back to sugarpak.js. Still investigating to figure out why/how this function was removed at Build 130-131.
2.  Fixed small bug in .is().weekday() where .weekday() was not returning 'this' if the .is() flag had not been set.

--------------------

2008-2-7 [geoffrey.mcgill]
1.  Fixed bug in parser.js which prevented some strings from parsing when the 'day' of the date string was greater than the last day of the current month.

	Example
	
	// Today is 13-Feb-2008
	Date.parse("30 Apr 2008"); //FAIL
	
	Date strings which fall under this scenario should now parse correctly.

--------------------

2008-2-5 [geoffrey.mcgill]
1.  Added .is().weekday() function to sugarpak.js. 
    The .weekday() function determines if the current date is a weekday. 
    The function must be preceded by the .is() function.
    
    Example

    Date.today().is().weekday(); // true|false    

--------------------

2008-2-4 [geoffrey.mcgill]
1.  Added .getOrdinal() tests to the new sugarpak (/trunk/test/sugarpak/) test package.
    See http://www.datejs.com/test/sugarpak/index.html

--------------------

2008-1-2 [geoffrey.mcgill]
1.  Added .toISOString() to sugarpak.js. Returns ISO 8601 formatted string of date.
2.  Changed .toJSONString() to return string value wrapped in double-quotes ("") as per
    JSON.org spec. 
   
    If you want an ISO/JSON date formatted string WITHOUT the double-quotes, please pass 
    a format to the .toString() function.
   
    Example
   
    new Date().toString("yyyy-MM-ddTHH:mm:ssZ");
   
3.  Fixed bug where Date.parse("monday") was not returning correct year when the current
    week overlapped the end of year.
4.  Fixed bug in .parseExact() where day was being initialized to '1' if no day was present in the date string.
    This was a problem when only parsing a Time.
5.  New tests added to /test/parseExact/.
6.  Found and fixed bug where if a string to be parsed was a digit with a trailing space.

    Example
    
    // Old
    Date.parse("5 "); // returned current day at 5 AM. Wrong.
    
    // New
    Date.parse("5 "); // return 5th day of current month. Correct.
    
    Just trimming whitespace before sending string into parser fixed the problem.

7.  Added parser support for... 
		"3 years ago"
		"7 hours ago"

--------------------

2007-12-27 [geoffrey.mcgill]
1.  Modified the offset values of Date.CultureInfo.timezones.
2.  Added <static> Date.compare(date1, date2).
        
        Example
        
        var date1 = Date.today();
        var date2 = Date.today().add(1).day();
        
        Date.compare(date1, date2); // returns -1

3.  Added <static> Date.equals(date1, date2).        

        Example
        
        var date1 = Date.today();
        var date2 = Date.today().add(1).day();
        
        Date.equals(date1, date2); // returns false

4.  Fixed bug in Date.getDayNumberFromName() where it was not checking against the Date.CultureInfo.shortestDayNames array.
5.  Removed <static> Date.getDayName(dayOfWeek). Please use Date.CultureInfo.dayNames[dayOfWeek]. Other options include:
        Date.CultureInfo.dayNames[dayOfWeek]
        Date.CultureInfo.abbreviatedDayNames[dayOfWeek]
        Date.CultureInfo.shortestDayNames[dayOfWeek]

    If you have a Date instance, please use .toString().
        
        Example
        
        Date.today().toString("dddd"); // "Thursday"
        Date.today().toString("ddd"); // "Thu"
        
5.  Removed <static> Date.getMonthName(month). Please use Date.CultureInfo.monthNames[month]. 
    Other options include:
        Date.CultureInfo.monthNames[month]
        Date.CultureInfo.abbreviatedMonthNames[month]

    If you have a Date instance, please use .toString().
        
        Example
        
        Date.today().toString("MMMM"); // "December"
        Date.today().toString("MMM"); // "Dec"

6.  Added Date.prototype.hasDaylightSavingTime(). 
    Returns a boolean value indicating whether Daylight Saving Time is observed in the current time zone.
7.  Added Date.prototype.isDaylightSavingTime(). 
    Returns a boolean value indicating whether this Date instance is within the Daylight Saving Time range for the current time zone.
8.  Verified core.js, sugarpak.js, and time.js are passing JSLint (http://www.jslint/) in "Strict whitespace" mode.

--------------------

2007-12-23 [geoffrey.mcgill]
1.  Moved all minified files to the /build/ folder. Now all the original source files are 
    located in the /src/ folder, and all minified files are located in the /build/ folder. 
2.  Removed /trunk/doc/ folder. 
3.  Added CHANGELOG.txt file to /trunk/ folder.
4.  Added README.txt file to /trunk/ folder.
5.  Added LICENSE.txt file to /trunk/ folder.
6.  Added TODO.txt file to /trunk/ folder.

--------------------